@model CardTransactionViewModel

@{
    ViewData["Title"] = "Confirm Deposit";
    dynamic fee = Model.Fee.HasValue
    ? decimal.Round(Model.Fee.Value, 2, MidpointRounding.AwayFromZero)
    : "0.00";

    dynamic amount = decimal.Round(Model.Amount, 2, MidpointRounding.AwayFromZero);

}

<div class="d-flex justify-content-center align-items-center">
    <div class="card mb-4 w-50 mx-auto">
        <div class="card-body bg-dark-1 text-center">
            <h3 class="text-warning">@Model.ActionTitle</h3>
            <h3>Are you sure you want to deposit:</h3>
            <h2><strong>@amount @Model.Wallet.Currency</strong></h2>
            <h3>to your wallet</h3>
            <h2><strong>@Model.Wallet.Name (@Model.Wallet.Currency)</strong></h2>
            <h3>from your card</h3>
            <h2><strong>@Model.Card.CardNumber (@Model.Card.Currency)</strong> ?</h2>
            <h4 class="text-warning mt-3">
                The transaction fee will be
                <strong>@fee @Model.Card.Currency</strong>.
            </h4>

            <div class="mt-4">
                <form asp-action="DepositToWallet" method="post" class="d-inline-block">
                    @Html.HiddenFor(m => m.WalletId)
                    @Html.HiddenFor(m => m.CardId)
                    @Html.HiddenFor(m => m.Amount)
                    @Html.HiddenFor(m => m.Fee)
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-check"></i> Yes, proceed
                    </button>
                </form>
                <a href="@Url.Action("Deposit", "Card")" class="btn btn-secondary ms-2">
                    <i class="fas fa-times"></i> Go back
                </a>
            </div>
        </div>
    </div>
</div>
